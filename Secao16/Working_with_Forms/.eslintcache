[{"C:\\Users\\raz0rv7\\Desktop\\ReactJS-Course\\Secao16\\Working_with_Forms\\src\\index.js":"1","C:\\Users\\raz0rv7\\Desktop\\ReactJS-Course\\Secao16\\Working_with_Forms\\src\\App.js":"2","C:\\Users\\raz0rv7\\Desktop\\ReactJS-Course\\Secao16\\Working_with_Forms\\src\\components\\SimpleInput.js":"3","C:\\Users\\raz0rv7\\Desktop\\ReactJS-Course\\Secao16\\Working_with_Forms\\src\\hooks\\use-input.js":"4"},{"size":179,"mtime":1666738009295,"results":"5","hashOfConfig":"6"},{"size":168,"mtime":1666738009338,"results":"7","hashOfConfig":"6"},{"size":3738,"mtime":1666836225746,"results":"8","hashOfConfig":"6"},{"size":752,"mtime":1666835260082,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"15q7mwh",{"filePath":"13","messages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"12"},"C:\\Users\\raz0rv7\\Desktop\\ReactJS-Course\\Secao16\\Working_with_Forms\\src\\index.js",[],["20","21"],"C:\\Users\\raz0rv7\\Desktop\\ReactJS-Course\\Secao16\\Working_with_Forms\\src\\App.js",[],"C:\\Users\\raz0rv7\\Desktop\\ReactJS-Course\\Secao16\\Working_with_Forms\\src\\components\\SimpleInput.js",["22","23","24"],"C:\\Users\\raz0rv7\\Desktop\\ReactJS-Course\\Secao16\\Working_with_Forms\\src\\hooks\\use-input.js",["25"],"import React, { useState } from \"react\";\r\n\r\nconst useInput = (validateValue) => {\r\n  const [enteredValue, setEnteredValue] = useState(\"\");\r\n  const [isTouched, setIsTouched] = useState(false);\r\n\r\n  const valueIsValid = validateValue(enteredValue);\r\n  const hasError = !valueIsValid && isTouched;\r\n\r\n  const valueChangeHandler = (event) => {\r\n    setEnteredValue(event.target.value);\r\n  };\r\n\r\n  const inputBlurChangeHandler = (event) => {\r\n    setIsTouched(true);\r\n  };\r\n\r\n  const reset = () => {\r\n    setEnteredValue(\"\");\r\n    setIsTouched(false);\r\n  };\r\n\r\n  return {\r\n    value: enteredValue,\r\n    isValid: valueIsValid,\r\n    hasError: hasError,\r\n    valueChangeHandler,\r\n    inputBlurChangeHandler,\r\n    reset,\r\n  };\r\n};\r\n\r\nexport default useInput;\r\n",{"ruleId":"26","replacedBy":"27"},{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","severity":1,"message":"31","line":1,"column":17,"nodeType":"32","messageId":"33","endLine":1,"endColumn":25},{"ruleId":"30","severity":1,"message":"34","line":1,"column":27,"nodeType":"32","messageId":"33","endLine":1,"endColumn":33},{"ruleId":"30","severity":1,"message":"35","line":1,"column":35,"nodeType":"32","messageId":"33","endLine":1,"endColumn":44},{"ruleId":"30","severity":1,"message":"36","line":1,"column":8,"nodeType":"32","messageId":"33","endLine":1,"endColumn":13},"no-native-reassign",["37"],"no-negated-in-lhs",["38"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useRef' is defined but never used.","'useEffect' is defined but never used.","'React' is defined but never used.","no-global-assign","no-unsafe-negation"]